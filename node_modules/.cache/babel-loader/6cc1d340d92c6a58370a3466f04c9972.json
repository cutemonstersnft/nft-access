{"ast":null,"code":"import io from 'socket.io-client';\nimport React from 'react';\nimport { createNonceSocketTopic } from '@bedrock-foundation/sdk';\nexport function useNonceSocket(config) {\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    if (config.nonce) {\n      const newSocket = io(config.bedrock.basePath);\n      const nonceSocketTopic = createNonceSocketTopic(config.nonce);\n      newSocket.on('connect', () => {\n        newSocket.on(nonceSocketTopic, data => {\n          var _a;\n\n          setData(data);\n          (_a = config.onChange) === null || _a === void 0 ? void 0 : _a.call(config, data);\n        });\n        newSocket.once('error', error => {\n          var _a;\n\n          setError(error);\n          (_a = config === null || config === void 0 ? void 0 : config.onError) === null || _a === void 0 ? void 0 : _a.call(config, error);\n        });\n      });\n      return () => {\n        newSocket.close();\n      };\n    }\n\n    return () => {};\n  }, [config.nonce, config.bedrock.basePath]);\n  return {\n    data,\n    error\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAEEC,sBAFF,QAGO,yBAHP;AAiBA,OAAM,SAAUC,cAAV,CAA4BC,MAA5B,EAA2D;EAC/D,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAyB,IAAzB,CAAxB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACM,QAAN,CAA6B,IAA7B,CAA1B;EAEAN,KAAK,CAACS,SAAN,CAAgB,MAAK;IACnB,IAAIN,MAAM,CAACO,KAAX,EAAkB;MAChB,MAAMC,SAAS,GAAGZ,EAAE,CAACI,MAAM,CAACS,OAAP,CAAeC,QAAhB,CAApB;MACA,MAAMC,gBAAgB,GAAGb,sBAAsB,CAACE,MAAM,CAACO,KAAR,CAA/C;MAEAC,SAAS,CAACI,EAAV,CAAa,SAAb,EAAwB,MAAK;QAC3BJ,SAAS,CAACI,EAAV,CAAaD,gBAAb,EAAgCV,IAAD,IAAY;;;UACzCC,OAAO,CAACD,IAAD,CAAP;UACA,YAAM,CAACY,QAAP,MAAe,IAAf,IAAeC,aAAf,GAAe,MAAf,GAAeA,gBAAGb,IAAH,CAAf;QACD,CAHD;QAIAO,SAAS,CAACO,IAAV,CAAe,OAAf,EAAyBX,KAAD,IAAiB;;;UACvCC,QAAQ,CAACD,KAAD,CAAR;UACA,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEY,OAAR,MAAe,IAAf,IAAeF,aAAf,GAAe,MAAf,GAAeA,gBAAGV,KAAH,CAAf;QACD,CAHD;MAID,CATD;MAWA,OAAO,MAAK;QACVI,SAAS,CAACS,KAAV;MACD,CAFD;IAGD;;IACD,OAAO,MAAK,CAAG,CAAf;EACD,CArBD,EAqBG,CAACjB,MAAM,CAACO,KAAR,EAAeP,MAAM,CAACS,OAAP,CAAeC,QAA9B,CArBH;EAuBA,OAAO;IACLT,IADK;IAELG;EAFK,CAAP;AAID","names":["io","React","createNonceSocketTopic","useNonceSocket","config","data","setData","useState","error","setError","useEffect","nonce","newSocket","bedrock","basePath","nonceSocketTopic","on","onChange","_a","once","onError","close"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/react-sdk/src/hooks/useNonceSocket.ts"],"sourcesContent":["import io from 'socket.io-client';\nimport React from 'react';\nimport {\n  Bedrock,\n  createNonceSocketTopic,\n} from '@bedrock-foundation/sdk';\n\ntype UseNonceSocketConfig<T> = {\n  bedrock: Bedrock;\n  nonce: string | null\n  onChange?: (data: T) => void,\n  onError?: (error: Error) => void,\n};\n\ntype UseNonceSocket<T> = {\n  data: T | null;\n  error: Error | null;\n};\n\nexport function useNonceSocket<T>(config: UseNonceSocketConfig<T>): UseNonceSocket<T> {\n  const [data, setData] = React.useState<T | null>(null);\n  const [error, setError] = React.useState<Error | null>(null);\n\n  React.useEffect(() => {\n    if (config.nonce) {\n      const newSocket = io(config.bedrock.basePath);\n      const nonceSocketTopic = createNonceSocketTopic(config.nonce);\n\n      newSocket.on('connect', () => {\n        newSocket.on(nonceSocketTopic, (data: T) => {\n          setData(data);\n          config.onChange?.(data);\n        });\n        newSocket.once('error', (error: Error) => {\n          setError(error);\n          config?.onError?.(error);\n        });\n      });\n\n      return () => {\n        newSocket.close();\n      };\n    }\n    return () => {};\n  }, [config.nonce, config.bedrock.basePath]);\n\n  return {\n    data,\n    error,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}