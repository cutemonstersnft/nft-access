{"ast":null,"code":"var _jsxFileName = \"/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/src/elements/Text.tsx\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport Colors from '../styles/Colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let TextTypesEnum;\n\n(function (TextTypesEnum) {\n  TextTypesEnum[\"Regular10\"] = \"Regular10\";\n  TextTypesEnum[\"Medium10\"] = \"Medium10\";\n  TextTypesEnum[\"Bold10\"] = \"Bold10\";\n  TextTypesEnum[\"Regular12\"] = \"Regular12\";\n  TextTypesEnum[\"Medium12\"] = \"Medium12\";\n  TextTypesEnum[\"Bold12\"] = \"Bold12\";\n  TextTypesEnum[\"Regular14\"] = \"Regular14\";\n  TextTypesEnum[\"Regular14Small\"] = \"Regular14Small\";\n  TextTypesEnum[\"Medium14\"] = \"Medium14\";\n  TextTypesEnum[\"Medium14Small\"] = \"Medium14Small\";\n  TextTypesEnum[\"Bold14\"] = \"Bold14\";\n  TextTypesEnum[\"Bold14Small\"] = \"Bold14Small\";\n  TextTypesEnum[\"Regular16\"] = \"Regular16\";\n  TextTypesEnum[\"Medium16\"] = \"Medium16\";\n  TextTypesEnum[\"Bold16\"] = \"Bold16\";\n  TextTypesEnum[\"Regular18\"] = \"Regular18\";\n  TextTypesEnum[\"Medium18\"] = \"Medium18\";\n  TextTypesEnum[\"Bold18\"] = \"Bold18\";\n  TextTypesEnum[\"Regular24\"] = \"Regular24\";\n  TextTypesEnum[\"Medium24\"] = \"Medium24\";\n  TextTypesEnum[\"Bold24\"] = \"Bold24\";\n  TextTypesEnum[\"Bold30\"] = \"Bold30\";\n})(TextTypesEnum || (TextTypesEnum = {}));\n\nexport let TextAsEnum;\n\n(function (TextAsEnum) {\n  TextAsEnum[\"Label\"] = \"Label\";\n  TextAsEnum[\"Paragraph\"] = \"Paragraph\";\n  TextAsEnum[\"Span\"] = \"Span\";\n})(TextAsEnum || (TextAsEnum = {}));\n\nexport let TextFamilyEnum;\n\n(function (TextFamilyEnum) {\n  TextFamilyEnum[\"OpenSans\"] = \"Open Sans\";\n  TextFamilyEnum[\"Pacifico\"] = \"Pacifico\";\n})(TextFamilyEnum || (TextFamilyEnum = {}));\n\nexport const TextStyles = styled.div`\n  position: relative;\n  padding: 0px;\n  font-family: \"Open Sans\", sans-serif;\n  font-family: ${props => {\n  switch (props.family) {\n    case TextFamilyEnum.OpenSans:\n      return '\"Open Sans\", sans-serif';\n\n    case TextFamilyEnum.Pacifico:\n      return '\"Pacifico\", cursive';\n\n    default:\n      return '\"Open Sans\", sans-serif';\n  }\n}};\n  margin: ${props => props.margin};\n  color: ${props => props.color};\n  width: ${props => props.width};\n  text-align: ${props => props.align};\n  white-space: ${props => props.noWrap ? 'nowrap' : null};\n  font-size: ${props => {\n  if (props.type.includes('10')) return '1.0rem';\n  if (props.type.includes('12')) return '1.2rem';\n  if (props.type.includes('14')) return '1.4rem';\n  if (props.type.includes('16')) return '1.6rem';\n  if (props.type.includes('18')) return '1.8rem';\n  if (props.type.includes('24')) return '2.4rem';\n  if (props.type.includes('30')) return '3.0rem';\n  return '400';\n}};\n  line-height: ${props => {\n  if (props.type.includes('10')) return '1.6rem';\n  if (props.type.includes('12')) return '1.6rem';\n\n  if (props.type.includes('14')) {\n    if (props.type.includes('Small')) {\n      return '1.6rem';\n    }\n\n    return '2.4rem';\n  }\n\n  if (props.type.includes('16')) return '2.4rem';\n  if (props.type.includes('18')) return '2.4rem';\n  if (props.type.includes('24')) return '3.2rem';\n  if (props.type.includes('30')) return '3.2rem';\n  return '400';\n}};\n  font-weight: ${props => {\n  if (props.type.includes('Regular')) return '400';\n  if (props.type.includes('Medium')) return '500';\n  if (props.type.includes('Bold')) return '700';\n  return '400';\n}};\n\n  &:hover {\n    cursor: ${props => props.onClick ? 'pointer' : null};\n  }\n`;\nconst Paragraph = TextStyles.withComponent('p');\n_c = Paragraph;\nconst Label = TextStyles.withComponent('label');\n_c2 = Label;\nconst Span = TextStyles.withComponent('span');\n_c3 = Span;\n\nconst Text = _ref => {\n  let {\n    children,\n    type = TextTypesEnum.Regular16,\n    as = TextAsEnum.Paragraph,\n    family = TextFamilyEnum.OpenSans,\n    color = Colors.Black,\n    width = 'auto',\n    align = 'left',\n    margin = '0',\n    onClick = null,\n    noWrap = false,\n    skWidth,\n    id\n  } = _ref;\n\n  const paragraph = /*#__PURE__*/_jsxDEV(Paragraph, {\n    id: id,\n    type: type,\n    color: color,\n    family: family,\n    width: width,\n    align: align,\n    margin: margin,\n    onClick: onClick && onClick,\n    noWrap: noWrap,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n\n  const label = /*#__PURE__*/_jsxDEV(Label, {\n    id: id,\n    type: type,\n    color: color,\n    family: family,\n    width: width,\n    align: align,\n    margin: margin,\n    onClick: onClick && onClick,\n    noWrap: noWrap,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n\n  const span = /*#__PURE__*/_jsxDEV(Span, {\n    id: id,\n    type: type,\n    color: color,\n    family: family,\n    width: width,\n    align: align,\n    margin: margin,\n    onClick: onClick && onClick,\n    noWrap: noWrap,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n\n  switch (as) {\n    case TextAsEnum.Paragraph:\n      return paragraph;\n\n    case TextAsEnum.Label:\n      return label;\n\n    case TextAsEnum.Span:\n      return span;\n\n    default:\n      return paragraph;\n  }\n};\n\n_c4 = Text;\nexport default Text;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Paragraph\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Span\");\n$RefreshReg$(_c4, \"Text\");","map":{"version":3,"names":["React","styled","Colors","TextTypesEnum","TextAsEnum","TextFamilyEnum","TextStyles","div","props","family","OpenSans","Pacifico","margin","color","width","align","noWrap","type","includes","onClick","Paragraph","withComponent","Label","Span","Text","children","Regular16","as","Black","skWidth","id","paragraph","label","span"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/src/elements/Text.tsx"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport Colors, { ColorsType } from '../styles/Colors';\n\nexport enum TextTypesEnum {\n  Regular10 = \"Regular10\",\n  Medium10 = \"Medium10\",\n  Bold10 = \"Bold10\",\n  Regular12 = \"Regular12\",\n  Medium12 = \"Medium12\",\n  Bold12 = \"Bold12\",\n  Regular14 = \"Regular14\",\n  Regular14Small = \"Regular14Small\",\n  Medium14 = \"Medium14\",\n  Medium14Small = \"Medium14Small\",\n  Bold14 = \"Bold14\",\n  Bold14Small = \"Bold14Small\",\n  Regular16 = \"Regular16\",\n  Medium16 = \"Medium16\",\n  Bold16 = \"Bold16\",\n  Regular18 = \"Regular18\",\n  Medium18 = \"Medium18\",\n  Bold18 = \"Bold18\",\n  Regular24 = \"Regular24\",\n  Medium24 = \"Medium24\",\n  Bold24 = \"Bold24\",\n  Bold30 = \"Bold30\",\n}\n\nexport enum TextAsEnum {\n  Label = \"Label\",\n  Paragraph = \"Paragraph\",\n  Span = \"Span\",\n}\n\nexport enum TextFamilyEnum {\n  OpenSans = \"Open Sans\",\n  Pacifico = \"Pacifico\",\n}\n\nexport const TextStyles = styled.div<TextProps>`\n  position: relative;\n  padding: 0px;\n  font-family: \"Open Sans\", sans-serif;\n  font-family: ${(props) => {\n    switch (props.family) {\n      case TextFamilyEnum.OpenSans:\n        return '\"Open Sans\", sans-serif';\n      case TextFamilyEnum.Pacifico:\n        return '\"Pacifico\", cursive';\n      default:\n        return '\"Open Sans\", sans-serif';\n    }\n  }};\n  margin: ${(props) => props.margin};\n  color: ${(props) => props.color};\n  width: ${(props) => props.width};\n  text-align: ${(props) => props.align};\n  white-space: ${(props) => (props.noWrap ? 'nowrap' : null)};\n  font-size: ${(props) => {\n    if (props.type.includes('10')) return '1.0rem';\n    if (props.type.includes('12')) return '1.2rem';\n    if (props.type.includes('14')) return '1.4rem';\n    if (props.type.includes('16')) return '1.6rem';\n    if (props.type.includes('18')) return '1.8rem';\n    if (props.type.includes('24')) return '2.4rem';\n    if (props.type.includes('30')) return '3.0rem';\n    return '400';\n  }};\n  line-height: ${(props) => {\n    if (props.type.includes('10')) return '1.6rem';\n    if (props.type.includes('12')) return '1.6rem';\n    if (props.type.includes('14')) {\n      if (props.type.includes('Small')) {\n        return '1.6rem';\n      }\n      return '2.4rem';\n    }\n    if (props.type.includes('16')) return '2.4rem';\n    if (props.type.includes('18')) return '2.4rem';\n    if (props.type.includes('24')) return '3.2rem';\n    if (props.type.includes('30')) return '3.2rem';\n    return '400';\n  }};\n  font-weight: ${(props) => {\n    if (props.type.includes('Regular')) return '400';\n    if (props.type.includes('Medium')) return '500';\n    if (props.type.includes('Bold')) return '700';\n    return '400';\n  }};\n\n  &:hover {\n    cursor: ${(props) => (props.onClick ? 'pointer' : null)};\n  }\n`;\n\nconst Paragraph = TextStyles.withComponent('p');\nconst Label = TextStyles.withComponent('label');\nconst Span = TextStyles.withComponent('span');\n\nexport type TextProps = {\n  children?: string | React.ReactNode;\n  type: TextTypesEnum;\n  as?: TextAsEnum;\n  family?: TextFamilyEnum;\n  color?: ColorsType;\n  width?: 'auto' | '100%' | string;\n  align?: 'left' | 'right' | 'center';\n  display?: 'inline-block' | 'block';\n  margin?: string;\n  onClick?: ((event?: MouseEvent) => void) & React.MouseEventHandler<HTMLElement>\n  noWrap?: boolean;\n  skWidth?: string | number | null;\n  id?: string;\n}\n\nconst Text: React.FC<TextProps> = ({\n  children,\n  type = TextTypesEnum.Regular16,\n  as = TextAsEnum.Paragraph,\n  family = TextFamilyEnum.OpenSans,\n  color = Colors.Black,\n  width = 'auto',\n  align = 'left',\n  margin = '0',\n  onClick = null,\n  noWrap = false,\n  skWidth,\n  id,\n}) => {\n  const paragraph = (\n    <Paragraph\n      id={id}\n      type={type}\n      color={color}\n      family={family}\n      width={width}\n      align={align}\n      margin={margin}\n      onClick={onClick as any && onClick}\n      noWrap={noWrap}\n    >\n      {children}\n    </Paragraph>\n  );\n\n  const label = (\n    <Label\n      id={id}\n      type={type}\n      color={color}\n      family={family}\n      width={width}\n      align={align}\n      margin={margin}\n      onClick={onClick as any && onClick}\n      noWrap={noWrap}\n    >\n      {children}\n    </Label>\n  );\n\n  const span = (\n    <Span\n      id={id}\n      type={type}\n      color={color}\n      family={family}\n      width={width}\n      align={align}\n      margin={margin}\n      onClick={onClick as any && onClick}\n      noWrap={noWrap}\n    >\n      {children}\n    </Span>\n  );\n\n  switch (as) {\n    case TextAsEnum.Paragraph:\n      return paragraph;\n    case TextAsEnum.Label:\n      return label;\n    case TextAsEnum.Span:\n      return span;\n    default:\n      return paragraph;\n  }\n};\n\nexport default Text;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}