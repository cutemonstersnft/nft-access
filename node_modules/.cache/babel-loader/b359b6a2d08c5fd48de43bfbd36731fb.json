{"ast":null,"code":"import { Keypair } from '@solana/web3.js';\nimport { encodeURL } from '@solana/pay';\nimport * as JSURL from '@bedrock-foundation/jsurl';\nexport function createLink(basePath, path, params) {\n  var _a;\n\n  const requestRef = Keypair.generate().publicKey.toBase58();\n  params.refs = [requestRef, ...((_a = params === null || params === void 0 ? void 0 : params.refs) !== null && _a !== void 0 ? _a : [])];\n  const url = `${basePath}${path}?params=${JSURL.stringify(params)}`;\n  const link = encodeURL({\n    link: new URL(url)\n  }).toString();\n  return {\n    link,\n    refs: {\n      requestRef\n    }\n  };\n}\nexport async function createNonceLink(basePath, path, noncePath, params) {\n  var _a;\n\n  const result = createLink(basePath, path, params);\n  params.refs = [result.refs.requestRef, ...((_a = params === null || params === void 0 ? void 0 : params.refs) !== null && _a !== void 0 ? _a : [])];\n  const nonceUrl = `${basePath}${noncePath}?params=${JSURL.stringify(params)}`;\n  const response = await fetch(nonceUrl);\n  const {\n    nonce\n  } = await response.json();\n  const finalResult = { ...result,\n    nonce,\n    nonceUrl\n  };\n  return finalResult;\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,2BAAvB;AA4BA,OAAM,SAAUC,UAAV,CACJC,QADI,EAEJC,IAFI,EAGJC,MAHI,EAGK;;;EAET,MAAMC,UAAU,GAAGP,OAAO,CAACQ,QAAR,GAAmBC,SAAnB,CAA6BC,QAA7B,EAAnB;EACAJ,MAAM,CAACK,IAAP,GAAc,CAACJ,UAAD,EAAa,IAAI,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEI,IAAR,MAAY,IAAZ,IAAYC,aAAZ,GAAYA,EAAZ,GAAgB,EAApB,CAAb,CAAd;EACA,MAAMC,GAAG,GAAG,GAAGT,QAAQ,GAAGC,IAAI,WAAWH,KAAK,CAACY,SAAN,CAAgBR,MAAhB,CAAuB,EAAhE;EACA,MAAMS,IAAI,GAAGd,SAAS,CAAC;IAAEc,IAAI,EAAE,IAAIC,GAAJ,CAAQH,GAAR;EAAR,CAAD,CAAT,CAAkCI,QAAlC,EAAb;EACA,OAAO;IACLF,IADK;IAELJ,IAAI,EAAE;MACJJ;IADI;EAFD,CAAP;AAMD;AAED,OAAO,eAAeW,eAAf,CACLd,QADK,EAELC,IAFK,EAGLc,SAHK,EAILb,MAJK,EAII;;;EAET,MAAMc,MAAM,GAAGjB,UAAU,CAACC,QAAD,EAAWC,IAAX,EAAiBC,MAAjB,CAAzB;EACAA,MAAM,CAACK,IAAP,GAAc,CAACS,MAAM,CAACT,IAAP,CAAYJ,UAAb,EAAyB,IAAI,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEI,IAAR,MAAY,IAAZ,IAAYC,aAAZ,GAAYA,EAAZ,GAAgB,EAApB,CAAzB,CAAd;EACA,MAAMS,QAAQ,GAAG,GAAGjB,QAAQ,GAAGe,SAAS,WAAWjB,KAAK,CAACY,SAAN,CAAgBR,MAAhB,CAAuB,EAA1E;EACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;EACA,MAAM;IAAEG;EAAF,IAAY,MAAMF,QAAQ,CAACG,IAAT,EAAxB;EACA,MAAMC,WAAW,GAA0B,EAAE,GAAGN,MAAL;IAAaI,KAAb;IAAoBH;EAApB,CAA3C;EACA,OAAOK,WAAP;AACD","names":["Keypair","encodeURL","JSURL","createLink","basePath","path","params","requestRef","generate","publicKey","toBase58","refs","_a","url","stringify","link","URL","toString","createNonceLink","noncePath","result","nonceUrl","response","fetch","nonce","json","finalResult"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/sdk/src/models/createLink.ts"],"sourcesContent":["import { Keypair } from '@solana/web3.js';\nimport { encodeURL } from '@solana/pay';\nimport * as JSURL from '@bedrock-foundation/jsurl';\n\nexport interface BaseTransactionRequestParams {\n  icon?: string;\n  label?: string;\n  refs?: string[];\n}\n\nexport interface CreateLinkRefs {\n  requestRef: string;\n  paramsRef?: string;\n  bedrockRef?: string;\n}\n\nexport interface CreateLinkResult {\n  link: string;\n  refs: CreateLinkRefs;\n}\n\nexport interface CreateNonceLinkResult extends CreateLinkResult {\n  nonceUrl: string;\n  nonce: string;\n}\n\nexport type LinkCreatorParams = {\n  basePath?: string;\n};\n\nexport function createLink<T extends BaseTransactionRequestParams>(\n  basePath: string,\n  path: string,\n  params: T,\n): CreateLinkResult {\n  const requestRef = Keypair.generate().publicKey.toBase58();\n  params.refs = [requestRef, ...(params?.refs ?? [])];\n  const url = `${basePath}${path}?params=${JSURL.stringify(params)}`;\n  const link = encodeURL({ link: new URL(url) }).toString();\n  return {\n    link,\n    refs: {\n      requestRef,\n    },\n  };\n}\n\nexport async function createNonceLink<T extends BaseTransactionRequestParams>(\n  basePath: string,\n  path: string,\n  noncePath: string,\n  params: T,\n): Promise<CreateNonceLinkResult> {\n  const result = createLink(basePath, path, params);\n  params.refs = [result.refs.requestRef, ...(params?.refs ?? [])];\n  const nonceUrl = `${basePath}${noncePath}?params=${JSURL.stringify(params)}`;\n  const response = await fetch(nonceUrl);\n  const { nonce } = await response.json();\n  const finalResult: CreateNonceLinkResult = { ...result, nonce, nonceUrl };\n  return finalResult;\n}\n"]},"metadata":{},"sourceType":"module"}