{"ast":null,"code":"import { createLink, createNonceLink } from './../models/createLink.mjs';\nexport class BedrockCore {\n  constructor(params) {\n    var _a;\n\n    this.createTransferLink = params => {\n      return createLink(this.basePath, BedrockCore.Paths.Transfer, params);\n    };\n\n    this.createEmptyWalletLink = params => {\n      return createLink(this.basePath, BedrockCore.Paths.EmptyWallet, params);\n    };\n\n    this.createAuthorizationNonceLink = async params => {\n      return await createNonceLink(this.basePath, BedrockCore.Paths.Authorization, BedrockCore.Paths.AuthorizationNonce, params);\n    };\n\n    this.getReferenceStatus = async params => {\n      const {\n        ref\n      } = params;\n      const url = `${this.basePath}${BedrockCore.Paths.ReferenceStatus}?ref=${ref}`;\n      const response = await fetch(url);\n      return await response.json();\n    };\n\n    this.basePath = (_a = params.basePath) !== null && _a !== void 0 ? _a : 'https://pay.bedrock.fyi';\n  }\n\n}\nBedrockCore.Paths = {\n  Transfer: '/transfer',\n  EmptyWallet: '/empty-wallet',\n  Authorization: '/authorization',\n  AuthorizationNonce: '/authorization/nonce',\n  ReferenceStatus: '/reference-status'\n};","map":{"version":3,"mappings":"AAAA,SACEA,UADF,EAEEC,eAFF,QAOO,4BAPP;AA2DA,OAAM,MAAOC,WAAP,CAAkB;EAWtBC,YAAYC,MAAZ,EAAqC;;;IAIrC,0BAAsBA,MAAD,IAA6C;MAChE,OAAOJ,UAAU,CAAiB,KAAKK,QAAtB,EAAgCH,WAAW,CAACI,KAAZ,CAAkBC,QAAlD,EAA4DH,MAA5D,CAAjB;IACD,CAFD;;IAIA,6BAAyBA,MAAD,IAAgD;MACtE,OAAOJ,UAAU,CAAoB,KAAKK,QAAzB,EAAmCH,WAAW,CAACI,KAAZ,CAAkBE,WAArD,EAAkEJ,MAAlE,CAAjB;IACD,CAFD;;IAIA,oCAA+B,MAAOA,MAAP,IAAsE;MACnG,OAAO,MAAMH,eAAe,CAC1B,KAAKI,QADqB,EAE1BH,WAAW,CAACI,KAAZ,CAAkBG,aAFQ,EAG1BP,WAAW,CAACI,KAAZ,CAAkBI,kBAHQ,EAI1BN,MAJ0B,CAA5B;IAMD,CAPD;;IASA,0BAAqB,MAAOA,MAAP,IAAgE;MACnF,MAAM;QAAEO;MAAF,IAAUP,MAAhB;MACA,MAAMQ,GAAG,GAAG,GAAG,KAAKP,QAAQ,GAAGH,WAAW,CAACI,KAAZ,CAAkBO,eAAe,QAAQF,GAAG,EAA3E;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;MACA,OAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;IACD,CALD;;IApBE,KAAKX,QAAL,GAAgB,YAAM,CAACA,QAAP,MAAe,IAAf,IAAeY,aAAf,GAAeA,EAAf,GAAmB,yBAAnC;EACD;;AAbqB;AACRf,oBAAgC;EAC5CK,QAAQ,EAAE,WADkC;EAE5CC,WAAW,EAAE,eAF+B;EAG5CC,aAAa,EAAE,gBAH6B;EAI5CC,kBAAkB,EAAE,sBAJwB;EAK5CG,eAAe,EAAE;AAL2B,CAAhC","names":["createLink","createNonceLink","BedrockCore","constructor","params","basePath","Paths","Transfer","EmptyWallet","Authorization","AuthorizationNonce","ref","url","ReferenceStatus","response","fetch","json","_a"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/sdk/src/modules/BedrockCore.ts"],"sourcesContent":["import {\n  createLink,\n  createNonceLink,\n  CreateLinkResult,\n  CreateNonceLinkResult,\n  LinkCreatorParams,\n  BaseTransactionRequestParams,\n} from '../models/createLink';\nimport { TokenTypes, TransactionStatuses } from '../models/shared';\n\nexport interface TokenGate {\n  collectionId?: string;\n  firstCreatorId?: string;\n  updateAuthorityId?: string;\n  traits?: Record<string, string | number>\n  discountPercentage?: number;\n}\n\nexport interface TokenDataSummary {\n  name: string;\n  mint: string;\n  image?: string;\n  traits: Record<string, string | number>;\n}\n\nexport type TransferParams = {\n  wallet: string;\n  token?: TokenTypes;\n  tokenAddress?: string;\n  quantity?: number;\n  size?: number;\n  gate?: TokenGate;\n} & BaseTransactionRequestParams;\n\nexport type EmptyWalletParams = {} & BaseTransactionRequestParams;\n\nexport type AuthorizationParams = {\n  gate?: TokenGate;\n} & BaseTransactionRequestParams;\n\nexport type AuthorizationData = {\n  wallet: string;\n  status: TransactionStatuses,\n  signature: string | null,\n  token: string | null,\n  message?: string;\n  gate?: TokenDataSummary;\n}\n\nexport type GetReferenceStatusParams = {\n  ref: string;\n};\n\nexport type StatusData = {\n  status: TransactionStatuses;\n  signature?: string | null\n  message?: string | null;\n}\n\nexport class BedrockCore {\n  public static Paths: Record<string, string> = {\n    Transfer: '/transfer',\n    EmptyWallet: '/empty-wallet',\n    Authorization: '/authorization',\n    AuthorizationNonce: '/authorization/nonce',\n    ReferenceStatus: '/reference-status',\n  };\n\n  public basePath: string;\n\n  constructor(params: LinkCreatorParams) {\n    this.basePath = params.basePath ?? 'https://pay.bedrock.fyi';\n  }\n\n  createTransferLink = (params: TransferParams): CreateLinkResult => {\n    return createLink<TransferParams>(this.basePath, BedrockCore.Paths.Transfer, params);\n  }\n\n  createEmptyWalletLink = (params: EmptyWalletParams): CreateLinkResult => {\n    return createLink<EmptyWalletParams>(this.basePath, BedrockCore.Paths.EmptyWallet, params);\n  }\n\n  createAuthorizationNonceLink = async (params: AuthorizationParams): Promise<CreateNonceLinkResult> => {\n    return await createNonceLink<AuthorizationParams>(\n      this.basePath,\n      BedrockCore.Paths.Authorization,\n      BedrockCore.Paths.AuthorizationNonce,\n      params,\n    );\n  }\n\n  getReferenceStatus = async (params: GetReferenceStatusParams): Promise<StatusData> => {\n    const { ref } = params;\n    const url = `${this.basePath}${BedrockCore.Paths.ReferenceStatus}?ref=${ref}`;\n    const response = await fetch(url);\n    return await response.json();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}