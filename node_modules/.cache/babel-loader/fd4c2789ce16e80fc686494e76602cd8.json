{"ast":null,"code":"export const stringify = function stringify(v) {\n  function encode(s) {\n    return !/[^\\w-.]/.test(s) ? s : s.replace(/[^\\w-.]/g, function (ch) {\n      if (ch === '$') return '!';\n      ch = ch.charCodeAt(0); // thanks to Douglas Crockford for the negative slice trick\n\n      return ch < 0x100 ? '*' + ('00' + ch.toString(16)).slice(-2) : '**' + ('0000' + ch.toString(16)).slice(-4);\n    });\n  }\n\n  var tmpAry;\n\n  switch (typeof v) {\n    case 'number':\n      return isFinite(v) ? '~' + v : '~null';\n\n    case 'boolean':\n      return '~' + v;\n\n    case 'string':\n      return \"~'\" + encode(v);\n\n    case 'object':\n      if (!v) return '~null';\n      tmpAry = [];\n\n      if (Array.isArray(v)) {\n        for (var i = 0; i < v.length; i++) {\n          tmpAry[i] = stringify(v[i]) || '~null';\n        }\n\n        return '~(' + (tmpAry.join('') || '~') + ')';\n      } else {\n        for (var key in v) {\n          if (v.hasOwnProperty(key)) {\n            var val = stringify(v[key]); // skip undefined and functions\n\n            if (val) {\n              tmpAry.push(encode(key) + val);\n            }\n          }\n        }\n\n        return '~(' + tmpAry.join('~') + ')';\n      }\n\n    default:\n      // function, undefined\n      return;\n  }\n};\nvar reserved = {\n  \"true\": true,\n  \"false\": false,\n  \"null\": null\n};\nexport const parse = function (s) {\n  if (!s) return null;\n  s = s.replace(/%(25)*27/g, \"'\");\n  var i = 0,\n      len = s.length;\n\n  function eat(expected) {\n    if (s.charAt(i) !== expected) throw new Error(\"bad JSURL syntax: expected \" + expected + \", got \" + (s && s.charAt(i)));\n    i++;\n  }\n\n  function decode() {\n    var beg = i,\n        ch,\n        r = \"\";\n\n    while (i < len && (ch = s.charAt(i)) !== '~' && ch !== ')') {\n      switch (ch) {\n        case '*':\n          if (beg < i) r += s.substring(beg, i);\n          if (s.charAt(i + 1) === '*') r += String.fromCharCode(parseInt(s.substring(i + 2, i + 6), 16)), beg = i += 6;else r += String.fromCharCode(parseInt(s.substring(i + 1, i + 3), 16)), beg = i += 3;\n          break;\n\n        case '!':\n          if (beg < i) r += s.substring(beg, i);\n          r += '$', beg = ++i;\n          break;\n\n        default:\n          i++;\n      }\n    }\n\n    return r + s.substring(beg, i);\n  }\n\n  return function parseOne() {\n    var result, ch, beg;\n    eat('~');\n\n    switch (ch = s.charAt(i)) {\n      case '(':\n        i++;\n\n        if (s.charAt(i) === '~') {\n          result = [];\n          if (s.charAt(i + 1) === ')') i++;else {\n            do {\n              result.push(parseOne());\n            } while (s.charAt(i) === '~');\n          }\n        } else {\n          result = {};\n\n          if (s.charAt(i) !== ')') {\n            do {\n              var key = decode();\n              result[key] = parseOne();\n            } while (s.charAt(i) === '~' && ++i);\n          }\n        }\n\n        eat(')');\n        break;\n\n      case \"'\":\n        i++;\n        result = decode();\n        break;\n\n      default:\n        beg = i++;\n\n        while (i < len && /[^)~]/.test(s.charAt(i))) i++;\n\n        var sub = s.substring(beg, i);\n\n        if (/[\\d\\-]/.test(ch)) {\n          result = parseFloat(sub);\n        } else {\n          result = reserved[sub];\n          if (typeof result === \"undefined\") throw new Error(\"bad value keyword: \" + sub);\n        }\n\n    }\n\n    return result;\n  }();\n};","map":{"version":3,"mappings":"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","names":["stringify","v","encode","s","test","replace","ch","charCodeAt","toString","slice","tmpAry","isFinite","Array","isArray","i","length","join","key","hasOwnProperty","val","push","reserved","parse","len","eat","expected","charAt","Error","decode","beg","r","substring","String","fromCharCode","parseInt","parseOne","result","sub","parseFloat"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/jsurl/src/jsurl.ts"],"sourcesContent":["export type JsUrl<T> = string;\n\nexport const stringify = function stringify<T>(v: T): JsUrl<T> {\n\tfunction encode(s) {\n\t\treturn !/[^\\w-.]/.test(s) ? s : s.replace(/[^\\w-.]/g, function (ch) {\n\t\t\tif (ch === '$') return '!';\n\t\t\tch = ch.charCodeAt(0);\n\t\t\t// thanks to Douglas Crockford for the negative slice trick\n\t\t\treturn ch < 0x100 ? '*' + ('00' + ch.toString(16)).slice(-2) : '**' + ('0000' + ch.toString(16)).slice(-4);\n\t\t});\n\t}\n\n\tvar tmpAry;\n\n\tswitch (typeof v) {\n\t\tcase 'number':\n\t\t\treturn isFinite(v) ? '~' + v : '~null';\n\t\tcase 'boolean':\n\t\t\treturn '~' + v;\n\t\tcase 'string':\n\t\t\treturn \"~'\" + encode(v);\n\t\tcase 'object':\n\t\t\tif (!v) return '~null';\n\n\t\t\ttmpAry = [];\n\n\t\t\tif (Array.isArray(v)) {\n\t\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\t\ttmpAry[i] = stringify(v[i]) || '~null';\n\t\t\t\t}\n\n\t\t\t\treturn '~(' + (tmpAry.join('') || '~') + ')';\n\t\t\t} else {\n\t\t\t\tfor (var key in v) {\n\t\t\t\t\tif (v.hasOwnProperty(key)) {\n\t\t\t\t\t\tvar val = stringify(v[key]);\n\n\t\t\t\t\t\t// skip undefined and functions\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\ttmpAry.push(encode(key) + val);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn '~(' + tmpAry.join('~') + ')';\n\t\t\t}\n\t\tdefault:\n\t\t\t// function, undefined\n\t\t\treturn;\n\t}\n};\n\nvar reserved = {\n\t\"true\": true,\n\t\"false\": false,\n\t\"null\": null\n};\n\nexport const parse = function<T> (s: JsUrl<T>): T {\n\tif (!s) return null;\n\ts = s.replace(/%(25)*27/g, \"'\");\n\tvar i = 0,\n\t\tlen = s.length;\n\n\tfunction eat(expected) {\n\t\tif (s.charAt(i) !== expected) throw new Error(\"bad JSURL syntax: expected \" + expected + \", got \" + (s && s.charAt(i)));\n\t\ti++;\n\t}\n\n\tfunction decode() {\n\t\tvar beg = i,\n\t\t\tch, r = \"\";\n\t\twhile (i < len && (ch = s.charAt(i)) !== '~' && ch !== ')') {\n\t\t\tswitch (ch) {\n\t\t\t\tcase '*':\n\t\t\t\t\tif (beg < i) r += s.substring(beg, i);\n\t\t\t\t\tif (s.charAt(i + 1) === '*') r += String.fromCharCode(parseInt(s.substring(i + 2, i + 6), 16)), beg = (i += 6);\n\t\t\t\t\telse r += String.fromCharCode(parseInt(s.substring(i + 1, i + 3), 16)), beg = (i += 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '!':\n\t\t\t\t\tif (beg < i) r += s.substring(beg, i);\n\t\t\t\t\tr += '$', beg = ++i;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn r + s.substring(beg, i);\n\t}\n\n\treturn (function parseOne() {\n\t\tvar result, ch, beg;\n\t\teat('~');\n\t\tswitch (ch = s.charAt(i)) {\n\t\t\tcase '(':\n\t\t\t\ti++;\n\t\t\t\tif (s.charAt(i) === '~') {\n\t\t\t\t\tresult = [];\n\t\t\t\t\tif (s.charAt(i + 1) === ')') i++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tresult.push(parseOne());\n\t\t\t\t\t\t} while (s.charAt(i) === '~');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult = {};\n\t\t\t\t\tif (s.charAt(i) !== ')') {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tvar key = decode();\n\t\t\t\t\t\t\tresult[key] = parseOne();\n\t\t\t\t\t\t} while (s.charAt(i) === '~' && ++i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\teat(')');\n\t\t\t\tbreak;\n\t\t\tcase \"'\":\n\t\t\t\ti++;\n\t\t\t\tresult = decode();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbeg = i++;\n\t\t\t\twhile (i < len && /[^)~]/.test(s.charAt(i)))\n\t\t\t\t\ti++;\n\t\t\t\tvar sub = s.substring(beg, i);\n\t\t\t\tif (/[\\d\\-]/.test(ch)) {\n\t\t\t\t\tresult = parseFloat(sub);\n\t\t\t\t} else {\n\t\t\t\t\tresult = reserved[sub];\n\t\t\t\t\tif (typeof result === \"undefined\") throw new Error(\"bad value keyword: \" + sub);\n\t\t\t\t}\n\t\t}\n\t\treturn result;\n\t})();\n}"]},"metadata":{},"sourceType":"module"}