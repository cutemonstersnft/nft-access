{"ast":null,"code":"import React from 'react';\nexport function useCreateNonceLink(createNonceLink) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    params: {}\n  };\n  const [result, setResult] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [isPolling, setIsPolling] = React.useState(true);\n  const cancel = React.useCallback(function () {\n    let broadcast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    var _a;\n\n    setIsPolling(false);\n\n    if (broadcast) {\n      (_a = config === null || config === void 0 ? void 0 : config.onCancel) === null || _a === void 0 ? void 0 : _a.call(config);\n    }\n  }, [isPolling]);\n  React.useEffect(() => {\n    const doEffect = async () => {\n      var _a, _b;\n\n      try {\n        setLoading(true);\n        const result = await createNonceLink(config.params);\n        setLoading(false);\n        setResult(result);\n        (_a = config === null || config === void 0 ? void 0 : config.onComplete) === null || _a === void 0 ? void 0 : _a.call(config, result);\n        cancel(false);\n      } catch (e) {\n        setLoading(false);\n        console.error(e);\n        setError(e);\n        (_b = config === null || config === void 0 ? void 0 : config.onError) === null || _b === void 0 ? void 0 : _b.call(config, e);\n        cancel(false);\n      }\n    };\n\n    doEffect();\n  }, [JSON.stringify(config.params)]);\n  return {\n    result,\n    loading,\n    error,\n    cancel\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAmBA,OAAM,SAAUC,kBAAV,CACJC,eADI,EAEqD;EAAA,IAAzDC,MAAyD,uEAAnB;IAAEC,MAAM,EAAE;EAAV,CAAmB;EAEzD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,KAAK,CAACO,QAAN,CAA6C,IAA7C,CAA5B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACO,QAAN,CAAwB,KAAxB,CAA9B;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACO,QAAN,CAA6B,IAA7B,CAA1B;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bb,KAAK,CAACO,QAAN,CAAwB,IAAxB,CAAlC;EACA,MAAMO,MAAM,GAAGd,KAAK,CAACe,WAAN,CAAkB,YAA8B;IAAA,IAA7BC,SAA6B,uEAAR,IAAQ;;;;IAC7DH,YAAY,CAAC,KAAD,CAAZ;;IACA,IAAIG,SAAJ,EAAe;MACb,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEC,QAAR,MAAgB,IAAhB,IAAgBC,aAAhB,GAAgB,MAAhB,GAAgBA,eAAhB;IACD;EACF,CALc,EAKZ,CAACN,SAAD,CALY,CAAf;EAOAZ,KAAK,CAACmB,SAAN,CAAgB,MAAK;IACnB,MAAMC,QAAQ,GAAG,YAAW;;;MAC1B,IAAI;QACFX,UAAU,CAAC,IAAD,CAAV;QACA,MAAMJ,MAAM,GAAG,MAAMH,eAAe,CAACC,MAAM,CAACC,MAAR,CAApC;QACAK,UAAU,CAAC,KAAD,CAAV;QACAH,SAAS,CAACD,MAAD,CAAT;QACA,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEgB,UAAR,MAAkB,IAAlB,IAAkBH,aAAlB,GAAkB,MAAlB,GAAkBA,gBAAGb,MAAH,CAAlB;QACAS,MAAM,CAAC,KAAD,CAAN;MACD,CAPD,CAOE,OAAOQ,CAAP,EAAe;QACfb,UAAU,CAAC,KAAD,CAAV;QACAc,OAAO,CAACb,KAAR,CAAcY,CAAd;QACAX,QAAQ,CAACW,CAAD,CAAR;QACA,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEE,OAAR,MAAe,IAAf,IAAeC,aAAf,GAAe,MAAf,GAAeA,gBAAGH,CAAH,CAAf;QACAR,MAAM,CAAC,KAAD,CAAN;MACD;IACF,CAfD;;IAgBAM,QAAQ;EACT,CAlBD,EAkBG,CAACM,IAAI,CAACC,SAAL,CAAexB,MAAM,CAACC,MAAtB,CAAD,CAlBH;EAoBA,OAAO;IACLC,MADK;IAELG,OAFK;IAGLE,KAHK;IAILI;EAJK,CAAP;AAMD","names":["React","useCreateNonceLink","createNonceLink","config","params","result","setResult","useState","loading","setLoading","error","setError","isPolling","setIsPolling","cancel","useCallback","broadcast","onCancel","_a","useEffect","doEffect","onComplete","e","console","onError","_b","JSON","stringify"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/react-sdk/src/hooks/useCreateNonceLink.ts"],"sourcesContent":["import React from 'react';\nimport {\n  CreateNonceLinkResult,\n} from '@bedrock-foundation/sdk';\n\ntype UseCreateNonceLinkConfig<T> = {\n  onComplete?: (result: CreateNonceLinkResult) => void,\n  onError?: (error: Error) => void,\n  onCancel?: () => void,\n  params: T;\n};\n\ntype UseCreateNonceLink = {\n  result: CreateNonceLinkResult | null;\n  loading: boolean;\n  error: Error | null;\n  cancel: () => void;\n}\n\nexport function useCreateNonceLink<T>(\n  createNonceLink: (params: T) => Promise<CreateNonceLinkResult>,\n  config: UseCreateNonceLinkConfig<T> = { params: {} as T },\n): UseCreateNonceLink {\n  const [result, setResult] = React.useState<CreateNonceLinkResult | null>(null);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<Error | null>(null);\n  const [isPolling, setIsPolling] = React.useState<boolean>(true);\n  const cancel = React.useCallback((broadcast: boolean = true) => {\n    setIsPolling(false);\n    if (broadcast) {\n      config?.onCancel?.();\n    }\n  }, [isPolling]);\n\n  React.useEffect(() => {\n    const doEffect = async () => {\n      try {\n        setLoading(true);\n        const result = await createNonceLink(config.params);\n        setLoading(false);\n        setResult(result);\n        config?.onComplete?.(result);\n        cancel(false);\n      } catch (e: any) {\n        setLoading(false);\n        console.error(e);\n        setError(e as Error);\n        config?.onError?.(e as Error);\n        cancel(false);\n      }\n    };\n    doEffect();\n  }, [JSON.stringify(config.params)]);\n\n  return {\n    result,\n    loading,\n    error,\n    cancel,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}