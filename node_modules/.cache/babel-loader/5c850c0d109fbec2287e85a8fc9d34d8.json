{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport function useInterval(callback, delay) {\n  let enabled = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const savedCallback = useRef(() => {});\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      var _a;\n\n      (_a = savedCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedCallback);\n    }\n\n    let id;\n\n    if (enabled && delay !== null) {\n      id = setInterval(tick, delay);\n    }\n\n    return () => clearInterval(id);\n  }, [delay, enabled]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAM,SAAUC,WAAV,CAAsBC,QAAtB,EAA0CC,KAA1C,EAAgF;EAAA,IAAvBC,OAAuB,uEAAJ,IAAI;EACpF,MAAMC,aAAa,GAAGL,MAAM,CAAW,MAAK,CAAG,CAAnB,CAA5B;EAEAD,SAAS,CAAC,MAAK;IACbM,aAAa,CAACC,OAAd,GAAwBJ,QAAxB;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIAH,SAAS,CAAC,MAAK;IACb,SAASQ,IAAT,GAAa;;;MACX,mBAAa,CAACD,OAAd,MAAqB,IAArB,IAAqBE,aAArB,GAAqB,MAArB,GAAqBA,sBAArB;IACD;;IAED,IAAIC,EAAJ;;IAEA,IAAIL,OAAO,IAAID,KAAK,KAAK,IAAzB,EAA+B;MAC7BM,EAAE,GAAGC,WAAW,CAACH,IAAD,EAAOJ,KAAP,CAAhB;IACD;;IAED,OAAO,MAAMQ,aAAa,CAACF,EAAD,CAA1B;EACD,CAZQ,EAYN,CAACN,KAAD,EAAQC,OAAR,CAZM,CAAT;AAaD","names":["useEffect","useRef","useInterval","callback","delay","enabled","savedCallback","current","tick","_a","id","setInterval","clearInterval"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/react-sdk/src/hooks/useInterval.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback: Function, delay: number, enabled: boolean = true) {\n  const savedCallback = useRef<Function>(() => {});\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current?.();\n    }\n\n    let id: any;\n\n    if (enabled && delay !== null) {\n      id = setInterval(tick, delay);\n    }\n\n    return () => clearInterval(id);\n  }, [delay, enabled]);\n}\n"]},"metadata":{},"sourceType":"module"}