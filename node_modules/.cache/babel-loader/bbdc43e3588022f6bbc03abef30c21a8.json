{"ast":null,"code":"var _window$location$href, _window, _window$location, _ref;\n\nimport { atom } from 'recoil';\nimport url from 'url';\nvar AppStateKeys;\n\n(function (AppStateKeys) {\n  AppStateKeys[\"CollectionId\"] = \"collectionId\";\n})(AppStateKeys || (AppStateKeys = {}));\n\nconst {\n  query\n} = url.parse((_window$location$href = (_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.href) !== null && _window$location$href !== void 0 ? _window$location$href : '', true);\nconst collectionId = atom({\n  key: AppStateKeys.CollectionId,\n  default: (_ref = query === null || query === void 0 ? void 0 : query.collectionId) !== null && _ref !== void 0 ? _ref : ''\n});\nconst AppState = {\n  collectionId\n};\nexport default AppState;","map":{"version":3,"names":["atom","url","AppStateKeys","query","parse","window","location","href","collectionId","key","CollectionId","default","AppState"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/src/recoil/app.recoil.ts"],"sourcesContent":["import { atom } from 'recoil';\nimport url from 'url';\n\nenum AppStateKeys {\n  CollectionId = 'collectionId',\n}\n\nconst { query } = url.parse(window?.location?.href ?? '', true);\n\nconst collectionId = atom<string>({\n  key: AppStateKeys.CollectionId,\n  default: query?.collectionId as string ?? '',\n});\n\nconst AppState = {\n  collectionId,\n};\n\nexport default AppState;\n"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;IAEKC,Y;;WAAAA,Y;EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAIL,MAAM;EAAEC;AAAF,IAAYF,GAAG,CAACG,KAAJ,qCAAUC,MAAV,gEAAU,QAAQC,QAAlB,qDAAU,iBAAkBC,IAA5B,yEAAoC,EAApC,EAAwC,IAAxC,CAAlB;AAEA,MAAMC,YAAY,GAAGR,IAAI,CAAS;EAChCS,GAAG,EAAEP,YAAY,CAACQ,YADc;EAEhCC,OAAO,UAAER,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,YAAT,uCAAmC;AAFV,CAAT,CAAzB;AAKA,MAAMI,QAAQ,GAAG;EACfJ;AADe,CAAjB;AAIA,eAAeI,QAAf"},"metadata":{},"sourceType":"module"}