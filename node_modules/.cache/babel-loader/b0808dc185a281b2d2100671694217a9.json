{"ast":null,"code":"import React from 'react';\nimport { useInterval } from './useInterval.mjs';\nconst DEFAULT_INTERVAL = 5000;\nexport function usePollReferenceStatus(getReferenceStatus, config) {\n  var _a;\n\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [isPolling, setIsPolling] = React.useState(true);\n  const cancel = React.useCallback(function () {\n    let broadcast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    var _a;\n\n    setIsPolling(false);\n\n    if (broadcast) {\n      (_a = config === null || config === void 0 ? void 0 : config.onCancel) === null || _a === void 0 ? void 0 : _a.call(config);\n    }\n  }, [isPolling]);\n  useInterval(async () => {\n    var _a, _b;\n\n    try {\n      const data = await getReferenceStatus({\n        ref: config.ref\n      });\n\n      if (data.signature !== null) {\n        setData(data);\n        (_a = config === null || config === void 0 ? void 0 : config.onComplete) === null || _a === void 0 ? void 0 : _a.call(config, data);\n        cancel(false);\n      }\n    } catch (e) {\n      console.error(e);\n      setError(e);\n      (_b = config === null || config === void 0 ? void 0 : config.onError) === null || _b === void 0 ? void 0 : _b.call(config, e);\n      cancel(false);\n    }\n  }, (_a = config.interval) !== null && _a !== void 0 ? _a : DEFAULT_INTERVAL, isPolling);\n  return {\n    data,\n    error,\n    cancel\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AAgBA,MAAMC,gBAAgB,GAAG,IAAzB;AAEA,OAAM,SAAUC,sBAAV,CACJC,kBADI,EAEJC,MAFI,EAEgC;;;EAEpC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAkC,IAAlC,CAAxB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACQ,QAAN,CAA6B,IAA7B,CAA1B;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACQ,QAAN,CAAwB,IAAxB,CAAlC;EACA,MAAMK,MAAM,GAAGb,KAAK,CAACc,WAAN,CAAkB,YAA8B;IAAA,IAA7BC,SAA6B,uEAAR,IAAQ;;;;IAC7DH,YAAY,CAAC,KAAD,CAAZ;;IACA,IAAIG,SAAJ,EAAe;MACb,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEC,QAAR,MAAgB,IAAhB,IAAgBC,aAAhB,GAAgB,MAAhB,GAAgBA,eAAhB;IACD;EACF,CALc,EAKZ,CAACN,SAAD,CALY,CAAf;EAOAV,WAAW,CACT,YAAW;;;IACT,IAAI;MACF,MAAMK,IAAI,GAAe,MAAMF,kBAAkB,CAAC;QAAEc,GAAG,EAAEb,MAAM,CAACa;MAAd,CAAD,CAAjD;;MACA,IAAIZ,IAAI,CAACa,SAAL,KAAmB,IAAvB,EAA6B;QAC3BZ,OAAO,CAACD,IAAD,CAAP;QACA,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEc,UAAR,MAAkB,IAAlB,IAAkBH,aAAlB,GAAkB,MAAlB,GAAkBA,gBAAGX,IAAH,CAAlB;QACAO,MAAM,CAAC,KAAD,CAAN;MACD;IACF,CAPD,CAOE,OAAOQ,CAAP,EAAe;MACfC,OAAO,CAACb,KAAR,CAAcY,CAAd;MACAX,QAAQ,CAACW,CAAD,CAAR;MACA,YAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEE,OAAR,MAAe,IAAf,IAAeC,aAAf,GAAe,MAAf,GAAeA,gBAAGH,CAAH,CAAf;MACAR,MAAM,CAAC,KAAD,CAAN;IACD;EACF,CAfQ,EAgBT,YAAM,CAACY,QAAP,MAAe,IAAf,IAAeR,aAAf,GAAeA,EAAf,GAAmBf,gBAhBV,EAiBTS,SAjBS,CAAX;EAoBA,OAAO;IACLL,IADK;IAELG,KAFK;IAGLI;EAHK,CAAP;AAKD","names":["React","useInterval","DEFAULT_INTERVAL","usePollReferenceStatus","getReferenceStatus","config","data","setData","useState","error","setError","isPolling","setIsPolling","cancel","useCallback","broadcast","onCancel","_a","ref","signature","onComplete","e","console","onError","_b","interval"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@bedrock-foundation/react-sdk/src/hooks/usePollReferenceStatus.ts"],"sourcesContent":["import React from 'react';\nimport { GetReferenceStatusParams, StatusData } from '..';\nimport { useInterval } from './useInterval';\n\ntype UsePollReferenceStatusConfig = {\n  ref: string;\n  onComplete?: (data: any) => void,\n  onError?: (error: Error) => void,\n  onCancel?: () => void,\n  interval?: number;\n}\n\ntype UsePollReferenceStatus = {\n  data: any | null;\n  error: Error | null;\n  cancel: () => void;\n}\n\nconst DEFAULT_INTERVAL = 5000;\n\nexport function usePollReferenceStatus(\n  getReferenceStatus: (params: GetReferenceStatusParams)=> Promise<StatusData>,\n  config: UsePollReferenceStatusConfig,\n): UsePollReferenceStatus {\n  const [data, setData] = React.useState<StatusData | null>(null);\n  const [error, setError] = React.useState<Error | null>(null);\n  const [isPolling, setIsPolling] = React.useState<boolean>(true);\n  const cancel = React.useCallback((broadcast: boolean = true) => {\n    setIsPolling(false);\n    if (broadcast) {\n      config?.onCancel?.();\n    }\n  }, [isPolling]);\n\n  useInterval(\n    async () => {\n      try {\n        const data: StatusData = await getReferenceStatus({ ref: config.ref });\n        if (data.signature !== null) {\n          setData(data);\n          config?.onComplete?.(data);\n          cancel(false);\n        }\n      } catch (e: any) {\n        console.error(e);\n        setError(e as Error);\n        config?.onError?.(e as Error);\n        cancel(false);\n      }\n    },\n    config.interval ?? DEFAULT_INTERVAL,\n    isPolling,\n  );\n\n  return {\n    data,\n    error,\n    cancel,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}