{"ast":null,"code":"import { u8 } from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from './../constants.mjs';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionTypeError } from './../errors.mjs';\nimport { decodeApproveInstruction } from './approve.mjs';\nimport { decodeApproveCheckedInstruction } from './approveChecked.mjs';\nimport { decodeBurnInstruction } from './burn.mjs';\nimport { decodeBurnCheckedInstruction } from './burnChecked.mjs';\nimport { decodeCloseAccountInstruction } from './closeAccount.mjs';\nimport { decodeFreezeAccountInstruction } from './freezeAccount.mjs';\nimport { decodeInitializeAccountInstruction } from './initializeAccount.mjs';\nimport { decodeInitializeMintInstruction } from './initializeMint.mjs';\nimport { decodeInitializeMultisigInstruction } from './initializeMultisig.mjs';\nimport { decodeMintToInstruction } from './mintTo.mjs';\nimport { decodeMintToCheckedInstruction } from './mintToChecked.mjs';\nimport { decodeRevokeInstruction } from './revoke.mjs';\nimport { decodeSetAuthorityInstruction } from './setAuthority.mjs';\nimport { decodeSyncNativeInstruction } from './syncNative.mjs';\nimport { decodeThawAccountInstruction } from './thawAccount.mjs';\nimport { decodeTransferInstruction } from './transfer.mjs';\nimport { decodeTransferCheckedInstruction } from './transferChecked.mjs';\nimport { TokenInstruction } from './types.mjs';\n/** TODO: docs */\n\nexport function decodeInstruction(instruction) {\n  let programId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TOKEN_PROGRAM_ID;\n  if (!instruction.data.length) throw new TokenInvalidInstructionDataError();\n  const type = u8().decode(instruction.data);\n  if (type === TokenInstruction.InitializeMint) return decodeInitializeMintInstruction(instruction, programId);\n  if (type === TokenInstruction.InitializeAccount) return decodeInitializeAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.InitializeMultisig) return decodeInitializeMultisigInstruction(instruction, programId);\n  if (type === TokenInstruction.Transfer) return decodeTransferInstruction(instruction, programId);\n  if (type === TokenInstruction.Approve) return decodeApproveInstruction(instruction, programId);\n  if (type === TokenInstruction.Revoke) return decodeRevokeInstruction(instruction, programId);\n  if (type === TokenInstruction.SetAuthority) return decodeSetAuthorityInstruction(instruction, programId);\n  if (type === TokenInstruction.MintTo) return decodeMintToInstruction(instruction, programId);\n  if (type === TokenInstruction.Burn) return decodeBurnInstruction(instruction, programId);\n  if (type === TokenInstruction.CloseAccount) return decodeCloseAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.FreezeAccount) return decodeFreezeAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.ThawAccount) return decodeThawAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.TransferChecked) return decodeTransferCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.ApproveChecked) return decodeApproveCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.MintToChecked) return decodeMintToCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.BurnChecked) return decodeBurnCheckedInstruction(instruction, programId); // TODO: implement\n\n  if (type === TokenInstruction.InitializeAccount2) throw new TokenInvalidInstructionTypeError();\n  if (type === TokenInstruction.SyncNative) return decodeSyncNativeInstruction(instruction, programId); // TODO: implement\n\n  if (type === TokenInstruction.InitializeAccount3) throw new TokenInvalidInstructionTypeError(); // TODO: implement\n\n  if (type === TokenInstruction.InitializeMultisig2) throw new TokenInvalidInstructionTypeError(); // TODO: implement\n\n  if (type === TokenInstruction.InitializeMint2) throw new TokenInvalidInstructionTypeError();\n  throw new TokenInvalidInstructionTypeError();\n}\n/** TODO: docs */\n\nexport function isInitializeMintInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeMint;\n}\n/** TODO: docs */\n\nexport function isInitializeAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeAccount;\n}\n/** TODO: docs */\n\nexport function isInitializeMultisigInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeMultisig;\n}\n/** TODO: docs */\n\nexport function isTransferInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Transfer;\n}\n/** TODO: docs */\n\nexport function isApproveInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Approve;\n}\n/** TODO: docs */\n\nexport function isRevokeInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Revoke;\n}\n/** TODO: docs */\n\nexport function isSetAuthorityInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.SetAuthority;\n}\n/** TODO: docs */\n\nexport function isMintToInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.MintTo;\n}\n/** TODO: docs */\n\nexport function isBurnInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Burn;\n}\n/** TODO: docs */\n\nexport function isCloseAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.CloseAccount;\n}\n/** TODO: docs */\n\nexport function isFreezeAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.FreezeAccount;\n}\n/** TODO: docs */\n\nexport function isThawAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.ThawAccount;\n}\n/** TODO: docs */\n\nexport function isTransferCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.TransferChecked;\n}\n/** TODO: docs */\n\nexport function isApproveCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.ApproveChecked;\n}\n/** TODO: docs */\n\nexport function isMintToCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.MintToChecked;\n}\n/** TODO: docs */\n\nexport function isBurnCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.BurnChecked;\n}\n/** TODO: docs, implement */\n// export function isInitializeAccount2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount2;\n// }\n\n/** TODO: docs */\n\nexport function isSyncNativeInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.SyncNative;\n}\n/** TODO: docs, implement */\n// export function isInitializeAccount3Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount3Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount3;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMint2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMint2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMint2;\n// }","map":{"version":3,"mappings":"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","names":["u8","TOKEN_PROGRAM_ID","TokenInvalidInstructionDataError","TokenInvalidInstructionTypeError","decodeApproveInstruction","decodeApproveCheckedInstruction","decodeBurnInstruction","decodeBurnCheckedInstruction","decodeCloseAccountInstruction","decodeFreezeAccountInstruction","decodeInitializeAccountInstruction","decodeInitializeMintInstruction","decodeInitializeMultisigInstruction","decodeMintToInstruction","decodeMintToCheckedInstruction","decodeRevokeInstruction","decodeSetAuthorityInstruction","decodeSyncNativeInstruction","decodeThawAccountInstruction","decodeTransferInstruction","decodeTransferCheckedInstruction","TokenInstruction","decodeInstruction","instruction","programId","data","length","type","decode","InitializeMint","InitializeAccount","InitializeMultisig","Transfer","Approve","Revoke","SetAuthority","MintTo","Burn","CloseAccount","FreezeAccount","ThawAccount","TransferChecked","ApproveChecked","MintToChecked","BurnChecked","InitializeAccount2","SyncNative","InitializeAccount3","InitializeMultisig2","InitializeMint2","isInitializeMintInstruction","decoded","isInitializeAccountInstruction","isInitializeMultisigInstruction","isTransferInstruction","isApproveInstruction","isRevokeInstruction","isSetAuthorityInstruction","isMintToInstruction","isBurnInstruction","isCloseAccountInstruction","isFreezeAccountInstruction","isThawAccountInstruction","isTransferCheckedInstruction","isApproveCheckedInstruction","isMintToCheckedInstruction","isBurnCheckedInstruction","isSyncNativeInstruction"],"sources":["/Users/khairulamirinrohmat/nft-access/bedrock-nft-access/node_modules/@solana/spl-token/src/instructions/decode.ts"],"sourcesContent":["import { u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionTypeError } from '../errors';\nimport { decodeApproveInstruction, DecodedApproveInstruction } from './approve';\nimport { decodeApproveCheckedInstruction, DecodedApproveCheckedInstruction } from './approveChecked';\nimport { decodeBurnInstruction, DecodedBurnInstruction } from './burn';\nimport { decodeBurnCheckedInstruction, DecodedBurnCheckedInstruction } from './burnChecked';\nimport { decodeCloseAccountInstruction, DecodedCloseAccountInstruction } from './closeAccount';\nimport { DecodedFreezeAccountInstruction, decodeFreezeAccountInstruction } from './freezeAccount';\nimport { DecodedInitializeAccountInstruction, decodeInitializeAccountInstruction } from './initializeAccount';\nimport { DecodedInitializeMintInstruction, decodeInitializeMintInstruction } from './initializeMint';\nimport { DecodedInitializeMultisigInstruction, decodeInitializeMultisigInstruction } from './initializeMultisig';\nimport { DecodedMintToInstruction, decodeMintToInstruction } from './mintTo';\nimport { DecodedMintToCheckedInstruction, decodeMintToCheckedInstruction } from './mintToChecked';\nimport { DecodedRevokeInstruction, decodeRevokeInstruction } from './revoke';\nimport { DecodedSetAuthorityInstruction, decodeSetAuthorityInstruction } from './setAuthority';\nimport { DecodedSyncNativeInstruction, decodeSyncNativeInstruction } from './syncNative';\nimport { DecodedThawAccountInstruction, decodeThawAccountInstruction } from './thawAccount';\nimport { DecodedTransferInstruction, decodeTransferInstruction } from './transfer';\nimport { DecodedTransferCheckedInstruction, decodeTransferCheckedInstruction } from './transferChecked';\nimport { TokenInstruction } from './types';\n\n/** TODO: docs */\nexport type DecodedInstruction =\n    | DecodedInitializeMintInstruction\n    | DecodedInitializeAccountInstruction\n    | DecodedInitializeMultisigInstruction\n    | DecodedTransferInstruction\n    | DecodedApproveInstruction\n    | DecodedRevokeInstruction\n    | DecodedSetAuthorityInstruction\n    | DecodedMintToInstruction\n    | DecodedBurnInstruction\n    | DecodedCloseAccountInstruction\n    | DecodedFreezeAccountInstruction\n    | DecodedThawAccountInstruction\n    | DecodedTransferCheckedInstruction\n    | DecodedApproveCheckedInstruction\n    | DecodedMintToCheckedInstruction\n    | DecodedBurnCheckedInstruction\n    // | DecodedInitializeAccount2Instruction\n    | DecodedSyncNativeInstruction\n    // | DecodedInitializeAccount3Instruction\n    // | DecodedInitializeMultisig2Instruction\n    // | DecodedInitializeMint2Instruction\n    // TODO: implement ^ and remove `never`\n    | never;\n\n/** TODO: docs */\nexport function decodeInstruction(\n    instruction: TransactionInstruction,\n    programId = TOKEN_PROGRAM_ID\n): DecodedInstruction {\n    if (!instruction.data.length) throw new TokenInvalidInstructionDataError();\n\n    const type = u8().decode(instruction.data);\n    if (type === TokenInstruction.InitializeMint) return decodeInitializeMintInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeAccount) return decodeInitializeAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeMultisig)\n        return decodeInitializeMultisigInstruction(instruction, programId);\n    if (type === TokenInstruction.Transfer) return decodeTransferInstruction(instruction, programId);\n    if (type === TokenInstruction.Approve) return decodeApproveInstruction(instruction, programId);\n    if (type === TokenInstruction.Revoke) return decodeRevokeInstruction(instruction, programId);\n    if (type === TokenInstruction.SetAuthority) return decodeSetAuthorityInstruction(instruction, programId);\n    if (type === TokenInstruction.MintTo) return decodeMintToInstruction(instruction, programId);\n    if (type === TokenInstruction.Burn) return decodeBurnInstruction(instruction, programId);\n    if (type === TokenInstruction.CloseAccount) return decodeCloseAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.FreezeAccount) return decodeFreezeAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.ThawAccount) return decodeThawAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.TransferChecked) return decodeTransferCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.ApproveChecked) return decodeApproveCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.MintToChecked) return decodeMintToCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.BurnChecked) return decodeBurnCheckedInstruction(instruction, programId);\n    // TODO: implement\n    if (type === TokenInstruction.InitializeAccount2) throw new TokenInvalidInstructionTypeError();\n    if (type === TokenInstruction.SyncNative) return decodeSyncNativeInstruction(instruction, programId);\n    // TODO: implement\n    if (type === TokenInstruction.InitializeAccount3) throw new TokenInvalidInstructionTypeError();\n    // TODO: implement\n    if (type === TokenInstruction.InitializeMultisig2) throw new TokenInvalidInstructionTypeError();\n    // TODO: implement\n    if (type === TokenInstruction.InitializeMint2) throw new TokenInvalidInstructionTypeError();\n\n    throw new TokenInvalidInstructionTypeError();\n}\n\n/** TODO: docs */\nexport function isInitializeMintInstruction(decoded: DecodedInstruction): decoded is DecodedInitializeMintInstruction {\n    return decoded.data.instruction === TokenInstruction.InitializeMint;\n}\n\n/** TODO: docs */\nexport function isInitializeAccountInstruction(\n    decoded: DecodedInstruction\n): decoded is DecodedInitializeAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.InitializeAccount;\n}\n\n/** TODO: docs */\nexport function isInitializeMultisigInstruction(\n    decoded: DecodedInstruction\n): decoded is DecodedInitializeMultisigInstruction {\n    return decoded.data.instruction === TokenInstruction.InitializeMultisig;\n}\n\n/** TODO: docs */\nexport function isTransferInstruction(decoded: DecodedInstruction): decoded is DecodedTransferInstruction {\n    return decoded.data.instruction === TokenInstruction.Transfer;\n}\n\n/** TODO: docs */\nexport function isApproveInstruction(decoded: DecodedInstruction): decoded is DecodedApproveInstruction {\n    return decoded.data.instruction === TokenInstruction.Approve;\n}\n\n/** TODO: docs */\nexport function isRevokeInstruction(decoded: DecodedInstruction): decoded is DecodedRevokeInstruction {\n    return decoded.data.instruction === TokenInstruction.Revoke;\n}\n\n/** TODO: docs */\nexport function isSetAuthorityInstruction(decoded: DecodedInstruction): decoded is DecodedSetAuthorityInstruction {\n    return decoded.data.instruction === TokenInstruction.SetAuthority;\n}\n\n/** TODO: docs */\nexport function isMintToInstruction(decoded: DecodedInstruction): decoded is DecodedMintToInstruction {\n    return decoded.data.instruction === TokenInstruction.MintTo;\n}\n\n/** TODO: docs */\nexport function isBurnInstruction(decoded: DecodedInstruction): decoded is DecodedBurnInstruction {\n    return decoded.data.instruction === TokenInstruction.Burn;\n}\n\n/** TODO: docs */\nexport function isCloseAccountInstruction(decoded: DecodedInstruction): decoded is DecodedCloseAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.CloseAccount;\n}\n\n/** TODO: docs */\nexport function isFreezeAccountInstruction(decoded: DecodedInstruction): decoded is DecodedFreezeAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.FreezeAccount;\n}\n\n/** TODO: docs */\nexport function isThawAccountInstruction(decoded: DecodedInstruction): decoded is DecodedThawAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.ThawAccount;\n}\n\n/** TODO: docs */\nexport function isTransferCheckedInstruction(\n    decoded: DecodedInstruction\n): decoded is DecodedTransferCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.TransferChecked;\n}\n\n/** TODO: docs */\nexport function isApproveCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedApproveCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.ApproveChecked;\n}\n\n/** TODO: docs */\nexport function isMintToCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedMintToCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.MintToChecked;\n}\n\n/** TODO: docs */\nexport function isBurnCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedBurnCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.BurnChecked;\n}\n\n/** TODO: docs, implement */\n// export function isInitializeAccount2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount2;\n// }\n\n/** TODO: docs */\nexport function isSyncNativeInstruction(decoded: DecodedInstruction): decoded is DecodedSyncNativeInstruction {\n    return decoded.data.instruction === TokenInstruction.SyncNative;\n}\n\n/** TODO: docs, implement */\n// export function isInitializeAccount3Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount3Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount3;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMint2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMint2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMint2;\n// }\n"]},"metadata":{},"sourceType":"module"}