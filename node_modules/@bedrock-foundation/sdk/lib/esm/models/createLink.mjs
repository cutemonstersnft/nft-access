import { Keypair } from '@solana/web3.js';
import { encodeURL } from '@solana/pay';
import * as JSURL from '@bedrock-foundation/jsurl';
export function createLink(basePath, path, params) {
    var _a;
    const requestRef = Keypair.generate().publicKey.toBase58();
    params.refs = [requestRef, ...((_a = params === null || params === void 0 ? void 0 : params.refs) !== null && _a !== void 0 ? _a : [])];
    const url = `${basePath}${path}?params=${JSURL.stringify(params)}`;
    const link = encodeURL({ link: new URL(url) }).toString();
    return {
        link,
        refs: {
            requestRef,
        },
    };
}
export async function createNonceLink(basePath, path, noncePath, params) {
    var _a;
    const result = createLink(basePath, path, params);
    params.refs = [result.refs.requestRef, ...((_a = params === null || params === void 0 ? void 0 : params.refs) !== null && _a !== void 0 ? _a : [])];
    const nonceUrl = `${basePath}${noncePath}?params=${JSURL.stringify(params)}`;
    const response = await fetch(nonceUrl);
    const { nonce } = await response.json();
    const finalResult = { ...result, nonce, nonceUrl };
    return finalResult;
}
//# sourceMappingURL=createLink.js.map