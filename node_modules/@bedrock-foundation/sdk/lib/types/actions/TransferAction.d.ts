import Joi from 'joi';
import * as JoiUtil from '../utils/JoiUtil';
import { Action, CreateTransactionRequest, CreateTransactionResponse, CreateLinkResult, BaseTransactionRequestParams } from '../models/shared';
export declare type TransferParams = {
    wallet: string;
    token: string;
    quantity?: number;
    size?: number;
} & BaseTransactionRequestParams;
export declare type CreateTransferTransactionRequest = CreateTransactionRequest<TransferParams>;
export declare type CreateTransferTransactionResponse = CreateTransactionResponse;
export declare const transferParamsSchema: Joi.ObjectSchema<any>;
export declare const transferDeliverySchema: Joi.ObjectSchema<any>;
export declare class TransferAction implements Action<TransferParams, CreateTransferTransactionRequest> {
    readonly path: string;
    readonly basePath: string;
    constructor(basePath?: string);
    createLink(params: TransferParams): CreateLinkResult;
    validate(params: TransferParams): JoiUtil.JoiValidatorResponse<TransferParams>;
    validateDelivery(params: CreateTransferTransactionRequest): JoiUtil.JoiValidatorResponse<CreateTransferTransactionRequest>;
}
