import Joi from 'joi';
import * as JoiUtil from '../utils/JoiUtil';
import { Action, CreateTransactionRequest, CreateTransactionResponse, CreateLinkResult, BaseTransactionRequestParams } from '../models/shared';
export declare type AuthorizationParams = {} & BaseTransactionRequestParams;
export declare type CreateAuthorizationTransactionRequest = CreateTransactionRequest<AuthorizationParams>;
export declare type CreateAuthorizationTransactionResponse = CreateTransactionResponse;
export declare const authorizationParamsSchema: Joi.ObjectSchema<any>;
export declare const authorizationDeliverySchema: Joi.ObjectSchema<any>;
export declare class AuthorizationAction implements Action<AuthorizationParams, CreateAuthorizationTransactionRequest> {
    readonly path: string;
    readonly noncePath: string;
    readonly basePath: string;
    constructor(basePath?: string);
    createLink(params: AuthorizationParams): CreateLinkResult;
    createNonceLink(params: AuthorizationParams): Promise<CreateLinkResult>;
    validate(params: AuthorizationParams): JoiUtil.JoiValidatorResponse<AuthorizationParams>;
    validateDelivery(params: CreateAuthorizationTransactionRequest): JoiUtil.JoiValidatorResponse<CreateAuthorizationTransactionRequest>;
}
