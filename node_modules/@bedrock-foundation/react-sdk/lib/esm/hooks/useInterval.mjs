import { useEffect, useRef } from 'react';
export function useInterval(callback, delay, enabled = true) {
    const savedCallback = useRef(() => { });
    useEffect(() => {
        savedCallback.current = callback;
    }, [callback]);
    useEffect(() => {
        function tick() {
            var _a;
            (_a = savedCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedCallback);
        }
        let id;
        if (enabled && delay !== null) {
            id = setInterval(tick, delay);
        }
        return () => clearInterval(id);
    }, [delay, enabled]);
}
//# sourceMappingURL=useInterval.js.map