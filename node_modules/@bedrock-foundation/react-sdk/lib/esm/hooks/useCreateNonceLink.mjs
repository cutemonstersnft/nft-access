import React from 'react';
export function useCreateNonceLink(createNonceLink, config = { params: {} }) {
    const [result, setResult] = React.useState(null);
    const [loading, setLoading] = React.useState(false);
    const [error, setError] = React.useState(null);
    const [isPolling, setIsPolling] = React.useState(true);
    const cancel = React.useCallback((broadcast = true) => {
        var _a;
        setIsPolling(false);
        if (broadcast) {
            (_a = config === null || config === void 0 ? void 0 : config.onCancel) === null || _a === void 0 ? void 0 : _a.call(config);
        }
    }, [isPolling]);
    React.useEffect(() => {
        const doEffect = async () => {
            var _a, _b;
            try {
                setLoading(true);
                const result = await createNonceLink(config.params);
                setLoading(false);
                setResult(result);
                (_a = config === null || config === void 0 ? void 0 : config.onComplete) === null || _a === void 0 ? void 0 : _a.call(config, result);
                cancel(false);
            }
            catch (e) {
                setLoading(false);
                console.error(e);
                setError(e);
                (_b = config === null || config === void 0 ? void 0 : config.onError) === null || _b === void 0 ? void 0 : _b.call(config, e);
                cancel(false);
            }
        };
        doEffect();
    }, [JSON.stringify(config.params)]);
    return {
        result,
        loading,
        error,
        cancel,
    };
}
//# sourceMappingURL=useCreateNonceLink.js.map