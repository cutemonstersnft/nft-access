import io from 'socket.io-client';
import React from 'react';
import { createNonceSocketTopic, } from '@bedrock-foundation/sdk';
export function useNonceSocket(config) {
    const [data, setData] = React.useState(null);
    const [error, setError] = React.useState(null);
    React.useEffect(() => {
        if (config.nonce) {
            const newSocket = io(config.bedrock.basePath);
            const nonceSocketTopic = createNonceSocketTopic(config.nonce);
            newSocket.on('connect', () => {
                newSocket.on(nonceSocketTopic, (data) => {
                    var _a;
                    setData(data);
                    (_a = config.onChange) === null || _a === void 0 ? void 0 : _a.call(config, data);
                });
                newSocket.once('error', (error) => {
                    var _a;
                    setError(error);
                    (_a = config === null || config === void 0 ? void 0 : config.onError) === null || _a === void 0 ? void 0 : _a.call(config, error);
                });
            });
            return () => {
                newSocket.close();
            };
        }
        return () => { };
    }, [config.nonce, config.bedrock.basePath]);
    return {
        data,
        error,
    };
}
//# sourceMappingURL=useNonceSocket.js.map